<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AzureSender_SerializeFailure" xml:space="preserve">
    <value>Could not serialize message: {0}</value>
  </data>
  <data name="AzureStore_BadWebHook" xml:space="preserve">
    <value>The '{0}' could not be retrieved from Azure Table store: {1}</value>
  </data>
  <data name="AzureStore_NoConnectionString" xml:space="preserve">
    <value>Please provide a Microsoft Azure Storage connection string with name '{0}' in the configuration string section of the 'Web.Config' file.</value>
  </data>
  <data name="AzureStore_NotFound" xml:space="preserve">
    <value>No entry was found with partition key '{0}' and row key '{1}'.</value>
  </data>
  <data name="DequeueManager_ErrorDequeueing" xml:space="preserve">
    <value>Encountered an error when dequeueing messages from the Azure Queue '{0}': '{1}'</value>
  </data>
  <data name="DequeueManager_GivingUp" xml:space="preserve">
    <value>Giving up sending WebHook '{0}' after '{1}' attempts.</value>
  </data>
  <data name="DequeueManager_NoProperty" xml:space="preserve">
    <value>Could not get the property with key '{0}' from the work item with Id '{1}'.</value>
  </data>
  <data name="DequeueManager_SendFailure" xml:space="preserve">
    <value>Could not send HTTP request to '{0}': '{1}'.</value>
  </data>
  <data name="DequeueManager_Started" xml:space="preserve">
    <value>This '{0}' instance has already been started. It can only be started once.</value>
  </data>
  <data name="DequeueManager_WebHookStatus" xml:space="preserve">
    <value>WebHook '{0}' resulted in status code '{1}' on attempt '{2}'.</value>
  </data>
  <data name="StorageManager_BadContinuationToken" xml:space="preserve">
    <value>Invalid continuation token: '{0}'.</value>
  </data>
  <data name="StorageManager_ContainerListError" xml:space="preserve">
    <value>Could not get the list of containers for this Microsoft Azure Storage account: {0}</value>
  </data>
  <data name="StorageManager_CreateFailed" xml:space="preserve">
    <value>Creating item in Azure table '{0}' failed with error code: '{1}'.</value>
  </data>
  <data name="StorageManager_ErrorRetrieving" xml:space="preserve">
    <value>Could not retrieve the given record with the given partition key and row key: {0}</value>
  </data>
  <data name="StorageManager_InitializationFailure" xml:space="preserve">
    <value>Could not initialize connection to Microsoft Azure Storage: {0}</value>
  </data>
  <data name="StorageManager_InvalidConnectionString" xml:space="preserve">
    <value>The connection string is invalid. Please provide a valid Microsoft Azure Storage connection string. You can get Microsoft Azure Storage connection string from the Azure portal.</value>
  </data>
  <data name="StorageManager_InvalidQueryOptionValue" xml:space="preserve">
    <value>Invalid value '{0}' for query option '{1}'. Please provide a valid value.</value>
  </data>
  <data name="StorageManager_NoCloudStorageAccount" xml:space="preserve">
    <value>Could not create a '{0}' instance from the connection string.</value>
  </data>
  <data name="StorageManager_OperationFailed" xml:space="preserve">
    <value>Operation failed with status code {0} and error: '{1}'.</value>
  </data>
  <data name="StorageManager_QueryFailed" xml:space="preserve">
    <value>Query operation failed with error: '{0}'.</value>
  </data>
  <data name="StorageManager_TableListError" xml:space="preserve">
    <value>Could not get the list of tables for this Microsoft Azure Storage account: {0}</value>
  </data>
  <data name="StorageManager_UnexpectedTableResult" xml:space="preserve">
    <value>Expected result of type '{0}' but received type '{1}'.</value>
  </data>
  <data name="StorageManager_UnsupportedQueryOption" xml:space="preserve">
    <value>The query option '{0}' is not allowed. Please use only the supported query options: {1}.</value>
  </data>
</root>